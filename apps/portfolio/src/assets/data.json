{
  "upcomming": [
    {
      "title": "Micro Frontend Architecture and Module Federation: Making the Right Choices for Your Project",
      "url": "https://events.pinetool.ai/2928/#speakers/854474",
      "thumbnail": "/portfolio/Angular_Tiny_Conference-2023_xsbk2s.png",
      "description": "Let's take real-life examples and live coding to answer the following (but not limited to) questions:\n How we should I my divide apps and are there specific criteria to separate them? Is my project suitable for the Micro-Frontend at all? When should I use Micro-Frontend and when Module Federation? And some other questions.",
      "events": [
        {
          "eventName": "DevDays Europe",
          "date": "25 May 2023",
          "location": "Vilnius"
        }
      ],
      "language": "English",
      "tags": [
        "architecture",
        "microfrontends"
      ]
    },
    {
      "title": "Is Qwik Really the World's First O(1) JS framework?",
      "url": "https://events.pinetool.ai/2928/#speakers/854474",
      "thumbnail": "/portfolio/Qwik-devdays_bullko.png",
      "description": "Qwik is a new JavaScript framework that offers the fastest possible page load times. Qwik introduces a new concept to JavaScript: The Resumable Framework. The unique part of Qwik is not in what it does but in how it achieves its goals (C). Let's see on live coding sessions the difference between Qwik and other JS frameworks. ",
      "events": [
        {
          "eventName": "DevDays Europe",
          "date": "24 May 2023",
          "location": "Online"
        }
      ],
      "language": "English",
      "tags": [
        "qwik",
        "architecture"
      ]
    },
    {
      "title": "Micro Frontend Architecture and Module Federation: Making the Right Choices for Your Project",
      "url": "https://conference.microfrontends.cloud/speakers/daniel-ostrovsky",
      "thumbnail": "/portfolio/microfrontends_jlzlc0.jpg",
      "description": "Let's take real-life examples and live coding to answer the following (but not limited to) questions:\n How we should I my divide apps and are there specific criteria to separate them? Is my project suitable for the Micro-Frontend at all? When should I use Micro-Frontend and when Module Federation? And some other questions.",
      "events": [
        {
          "eventName": "MICRO FRONTENDS",
          "date": "12 June 2023",
          "location": "Online"
        }
      ],
      "language": "English",
      "tags": [
        "architecture",
        "microfrontends"
      ]
    }
  ],
  "videos": [
    {
      "title": "Micro Frontend Architecture and Module Federation: Making the Right Choices for Your Project",
      "url": "https://www.youtube.com/watch?v=DyaYw_NdYEM",
      "thumbnail": "/portfolio/FuguNM6WwAAf1Jk_zan9iv.jpg",
      "description": "Let's take real-life examples and live coding to answer the following (but not limited to) questions:\nHow we should I my divide apps and are there specific criteria to separate them? Is my project suitable for the Micro-Frontend at all? When should I use Micro-Frontend and when Module Federation? And some other questions.",
      "events": [
        {
          "eventName": "AngularTinyConf",
          "date": "28 April 2023",
          "location": "Online"
        }
      ],
      "language": "English",
      "tags": [
        "architecture",
        "microfrontends"
      ]
    },
    {
      "title": "Metaprogramming From 0 to 100",
      "url": "https://www.angulartinyconf.com/",
      "thumbnail": "/portfolio/angular-tiny-conf.jpeg",
      "description": "Metaprogramming is the entire world of programming, in latest TS versions we have set of great new features that provide low-level hooks into code mechanics.\nLet's touch the tip of the iceberg!\nWe will talk about the definition of \"Metaprogramming\": some best and some bad practices.\nAnd of course - live-coding!",
      "events": [
        {
          "eventName": "Angular Tiny Conf ",
          "date": "02 December 2022",
          "location": "Online"
        }
      ],
      "language": "English",
      "tags": [
        "angular",
        "typescript",
        "metaprogramming"
      ]
    },
    {
      "title": "The flexible way to adopt UX/UI in Angular app according to user’s permissions.",
      "url": "https://events.geekle.us/angular2/",
      "thumbnail": "/portfolio/geekly-ng-summit.png",
      "description": "In many projects, there are authentication processes (more or less). A lot of “best practices” were written in all known technologies and so on, and so forth.\n\nBut what happens after the user made the login? After all, he by far cannot do everything. How to define what he can see and what not. What buttons he has the rights to click on, what to change, create and delete.",
      "events": [
        {
          "eventName": "Angular Global Summit'23",
          "date": "14-15 February 2023",
          "location": "Online"
        }
      ],
      "language": "English",
      "tags": [
        "angular",
        "typescript",
        "ux/ui",
        "authorization"
      ]
    },
    {
      "title": "Metaprogramming From 0 to 100",
      "url": "https://2022.ng-conf.org/session-2/typescript-meta-programming-from-0-to-100/",
      "thumbnail": "/portfolio/ng-conf.png",
      "description": "Metaprogramming is the entire world of programming, in latest TS versions we have set of great new features that provide low-level hooks into code mechanics.\nLet's touch the tip of the iceberg!\nWe will talk about the definition of \"Metaprogramming\": some best and some bad practices.\nAnd of course - live-coding!",
      "events": [
        {
          "eventName": "NG-Conf 2022",
          "date": "03 September 2022",
          "location": "Salt Lake City, Utah"
        }
      ],
      "language": "English",
      "tags": [
        "angular",
        "typescript",
        "metaprogramming"
      ]
    },
    {
      "title": "TypeScript Metaprogramming",
      "url": "https://www.youtube.com/watch?v=NJdyVmmqvGw",
      "thumbnail": "/portfolio/city-js.jpg",
      "description": "Metaprogramming is the entire world of programming, in latest TS versions we have set of great new features that provide low-level hooks into code mechanics.\nLet's touch the tip of the iceberg!\nWe will talk about the definition of \"Metaprogramming\": some best and some bad practices.\nAnd of course - live-coding!",
      "events": [
        {
          "eventName": "CityJs",
          "date": "25 March 2022",
          "location": "London, UK"
        },
        {
          "eventName": "Developers Week",
          "date": "05 July 2022",
          "location": "Germany, DE"
        }
      ],
      "language": "English",
      "tags": [
        "typescript",
        "metaprogramming"
      ]
    },
    {
      "title": "Fall in Love With JS Decorators",
      "url": "https://www.youtube.com/watch?v=y0T9IRo-7zo&t=7524s",
      "thumbnail": "/portfolio/js-fest.jpg",
      "description": "Decorators are one of the most underrated features in JS. At the same time is one of the most life-changing features. Once you get it your life will never be the same. We will start from basics definitions and go all the way to advanced real-life examples and use cases.",
      "events": [
        {
          "eventName": "JS Fest",
          "date": "10 September 2019",
          "location": "Kyiv, UA"
        },
        {
          "eventName": "OdessaJS",
          "date": "22 August 2020",
          "location": "Odessa, UA"
        },
        {
          "eventName": "TS-Conf",
          "date": "10 April 2019",
          "location": "Italy, IT"
        }
      ],
      "country": "ua",
      "tags": [
        "typescript",
        "javascript",
        "decorators"
      ]
    },
    {
      "title": "Full-Stuck RunTime type validation.",
      "url": "https://youtu.be/WbB0uSJ84Tk",
      "thumbnail": "/portfolio/ts-validation.jpg",
      "description": "How to ensure type validation of data coming from external sources? Let’s see how can we create a smooth developer experience with strong assurances of correctness at build-time.",
      "events": [
        {
          "eventName": "Angular-IL Meetup",
          "date": "19 August 2020"
        }
      ],
      "language": "Hebrew",
      "tags": [
        "typescript"
      ]
    },
    {
      "title": "The flexible way to adopt UX/UI in Angular app according to user’s permissions.",
      "url": "https://youtu.be/BqOKhIDrmoc",
      "thumbnail": "/portfolio/ng-talks.jpg",
      "description": "In many projects, there are authentication processes (more or less). A lot of “best practices” were written in all known technologies and so on, and so forth.\n\nBut what happens after the user made the login? After all, he by far cannot do everything. How to define what he can see and what not. What buttons he has the rights to click on, what to change, create and delete.",
      "events": [
        {
          "eventName": "NG Talks",
          "location": "Kharkiv, UA",
          "date": "08 November 2019"
        }
      ],
      "language": "English",
      "tags": [
        "angular",
        "authorization",
        "permissions"
      ]
    },
    {
      "title": "FrontEnd + DevOps = ❤️ (Workshop)",
      "url": "https://youtu.be/syI0ve6k0VE",
      "thumbnail": "/portfolio/devops-front.jpg",
      "events": [
        {
          "date": "27 March 2020",
          "eventName": "MeetUp",
          "location": "Israel, IL"
        },
        {
          "date": "07 Fev 2020",
          "eventName": "MeetUp",
          "location": "Israel, IL"
        }
      ],
      "language": "Hebrew",
      "tags": [
        "devops",
        "web development",
        "dockers"
      ]
    }
  ],
  "blogs": [
    {
      "title": "How to use System Environment variables (process.env) in Angular application.",
      "url": "https://medium.com/itnext/how-to-use-system-environment-variables-process-env-in-angular-application-b9e7104dcc98",
      "thumbnail": "/portfolio/env-vars.png",
      "description": "The environment variables setup with @angular/cli is great. Unless we need to pass to the app some values that we do not want to commit to the repository. In this article, I want to consider an approach that uses native Angular capabilities, such as builder and schematics.",
      "events": [
        {
          "eventName": "Medium",
          "date": "11 Sep 2022"
        }
      ],
      "language": "English",
      "tags": [
        "typescript",
        "javascript",
        "Angular",
        "schematics",
        "builders"
      ]
    },
    {
      "title": "Metaprogramming in JavaScript/TypeScript Part #2 (Decorators)",
      "url": "https://medium.com/@danduh/metaprogramming-in-javascript-typescript-part-2-decorators-164eed3770b6",
      "thumbnail": "/portfolio/medium-decorators.png",
      "description": "Decorators an essential part of metaprogramming in both JS and TypeScript. Python (and beyond) developers are very familiar with this pattern. At this point, officially, decorators are not yet part of JavaScript.",
      "events": [
        {
          "eventName": "Medium",
          "date": "10 Sep 2022"
        }
      ],
      "language": "English",
      "tags": [
        "typescript",
        "javascript",
        "decorators",
        "metaprogramming"
      ]
    },
    {
      "title": "The flexible way to adopt UX/UI in Angular app according to user’s permissions.",
      "url": "https://medium.com/@danduh/the-flexible-way-to-adopt-ux-ui-in-angular-app-according-to-users-permissions-b5db8cf05fbe",
      "thumbnail": "/portfolio/angular-permissions.png",
      "description": "In many projects, there are authentication processes (more or less). A lot of “best practices” were written in all known technologies and so on, and so forth.\n\nBut what happens after the user made the login? After all, he by far cannot do everything. How to define what he can see and what not. What buttons he has the rights to click on, what to change, create and delete.",
      "events": [
        {
          "eventName": "Medium",
          "date": "08 February 2019"
        }
      ],
      "language": "English",
      "tags": [
        "angular",
        "authorization",
        "permissions"
      ]
    },
    {
      "title": "Metaprogramming in JavaScript/TypeScript Part #1",
      "url": "https://medium.com/@danduh/metaprogramming-javascript-typescript-part-1-descriptors-bc443d048fe9",
      "thumbnail": "/portfolio/ts-js.png",
      "description": "Metaprogramming is the entire world of programming, in latest TS versions we have set of great new features that provide low-level hooks into code mechanics.\nLet's touch the tip of the iceberg!\nWe will talk about the definition of \"Metaprogramming\": some best and some bad practices.\nAnd of course - live-coding!",
      "events": [
        {
          "eventName": "Medium",
          "date": "05 May 2019"
        }
      ],
      "language": "English",
      "tags": [
        "typescript",
        "javascript",
        "decorators"
      ]
    }
  ],
  "tbds": [
    {
      "title": "Docker, why and how?",
      "url": "https://sessionize.com/s/danduh/docker-why-and-how/26750",
      "thumbnail": "/portfolio/docker.png",
      "description": "There are many great articles and talks for those who already use docker. I will appeal to those who not only do not know what docker is but are not sure whether they should know it.",
      "events": [
        {
          "eventName": "TBD",
          "date": "Future"
        }
      ],
      "language": "En/Heb/UA/RU",
      "tags": [
        "docker",
        "devops"
      ]
    },
    {
      "title": "GraphQl Federation: with big power comes huge responsibility.",
      "url": "https://sessionize.com/s/danduh/graphql-federation-with-big-power-comes-huge-respo/53487",
      "thumbnail": "/portfolio/graphql-fed.png",
      "description": "The main use case for GraphQl Federation is MicroService APIs Scaling. This talk is not about it. We will talk about the advantages and disadvantages you can get with this architecture.\nWe will go over a check list of things you might meet in your journey to migrate from a monolith to MicroServices with GraphQl Federation, review some OpenSource tools you’ll probably need, and set of tools you might need to create for your specific case.",
      "events": [
        {
          "eventName": "TBD",
          "date": "Future"
        }
      ],
      "language": "En/Heb/UA/RU",
      "tags": [
        "graphql",
        "federation",
        "typescript"
      ]
    },
    {
      "title": "Go down the rabbit hole with Typescript Compiler API.",
      "url": "https://sessionize.com/s/danduh/go-down-the-rabbit-hole-with-typescript-compiler-a/47694",
      "thumbnail": "/portfolio/ts-compiler.png",
      "description": "TypeScript has become very popular in the past few years. Many of us (developers) have a good understanding of the language except not many many of us really know how the compiler works internally. Understanding the internal mechanism of the TypeScript compiler and API will be extremely valuable if you need to improve the build pipeline, or develop custom tools.\nJoin Me On a Trip Down the Rabbit Hole to see the magic.",
      "events": [
        {
          "eventName": "TBD",
          "date": "Future"
        }
      ],
      "language": "En/Heb/UA/RU",
      "tags": [
        "compiler",
        "typescript"
      ]
    }
  ]
}
